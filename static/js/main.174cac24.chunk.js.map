{"version":3,"sources":["apis/forBet.js","components/ListCore.js","components/vars.js","components/EventsList.js","actions/index.js","components/App.js","reducers/index.js","reducers/eventsReducer.js","index.js"],"names":["axios","create","baseURL","ListCore","_ref","event","react_default","a","createElement","className","key","id","eventName","eventGames","outcomes","map","i","style","display","padding","outcomeOdds","eventVars","placePoland","placeOther","placeDefault","category2name","sortVars","EventsList","this","props","fetchEvents","components_ListCore","sort","events","b","parseFloat","eventStart","_this","sorted","sortedState","eventPlace","category2Name","buildList","renderList","Component","connect","state","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","response","wrap","_context","prev","next","forBet","get","sent","type","payload","data","stop","_x","apply","arguments","App","setPlace","place","setState","_this2","onClick","react_router_dom","marginLeft","to","react_router","exact","path","render","components_EventsList","combineReducers","length","undefined","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.174cac24.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n  baseURL: \"https://frontapi.iforbet.pl/events\"\n});","import React from \"react\";\n\nconst ListCore = ({ event }) => {\n  return (\n    <div className=\"item\" key={event.id}>\n      <div className=\"content\">\n        <div className=\"header\">\n          <h3>{event.eventName}</h3>\n        </div>\n        <div className=\"description\">\n          {event.eventGames[0].outcomes.map(i => (\n            <p style={{ display: \"inline-block\", padding: \"5px\" }}>\n              {i.outcomeOdds}\n            </p>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ListCore;","export const eventVars = {\n    placePoland: 'poland',\n    placeOther: 'other',\n    placeDefault: 'none',\n    category2name: 'Polska',\n};\n\nexport const sortVars = {\n    ascending: 'ascending',\n    descending: 'descending',\n}","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchEvents } from \"../actions\";\n\nimport ListCore from './ListCore';\nimport { eventVars, sortVars } from './vars';\n\nclass EventsList extends Component {\n  componentDidMount() {\n    this.props.fetchEvents();\n  }\n\n  buildList(event) {\n    return (\n      <ListCore event={event} />\n    );\n  }\n\n  sortedState() {\n    if (this.props.sort === sortVars.ascending) {\n      return (this.props.events.sort(\n        (a, b) => parseFloat(a.eventStart) - parseFloat(b.eventStart)\n      ));\n    } else if (this.props.sort === sortVars.descending) {\n      return (this.props.events.sort(\n        (a, b) => parseFloat(b.eventStart) - parseFloat(a.eventStart)\n      ));\n    } else {\n      return this.props.events;\n    };\n  }\n\n  renderList() {\n    const sorted = this.sortedState();\n\n    switch (this.props.eventPlace) {\n      case \"poland\":\n        return sorted.map(event => {\n          if (event.category2Name === eventVars.category2name) {\n            return this.buildList(event)\n          } else {\n            return null;\n          }\n        });\n      case \"other\":\n        return sorted.map(event => {\n          if (event.category2Name !== eventVars.category2name) {\n            return this.buildList(event);\n          } else {\n            return null;\n          }\n        });\n      default:\n        return sorted.map(event => {\n          return this.buildList(event);\n        });\n    };\n  };\n\n  render() {\n    return <div className=\"ui relaxed divided list\">{this.renderList()}</div>;\n  };\n};\n\nconst mapStateToProps = state => {\n  return { events: state.events };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchEvents }\n)(EventsList);\n","import forBet from \"../apis/forBet\";\n\nexport const fetchEvents = () => \n  async dispatch => {\n    const response = await forBet.get(\"/popular\");\n\n    dispatch({ type: 'FETCH_EVENTS', payload: response.data })\n  };\n","import React, { Component } from \"react\";\nimport EventsList from \"./EventsList\";\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\n\nimport { eventVars, sortVars } from './vars';\n\nclass App extends Component {\n  state = { eventPlace: \"none\" };\n\n  setPlace = (place) => {\n    this.setState({ eventPlace: eventVars[place]});\n  };\n\n  render() {\n    return (\n      <div className=\"ui container\">\n        <div style={{ padding: \"10px\" }}>\n          <button\n            className=\"ui button\"\n            onClick={() => this.setPlace(\"placePoland\")}\n          >\n            Poland\n          </button>\n          <button\n            className=\"ui button\"\n            onClick={() => this.setPlace(\"placeOther\")}\n          >\n            Rest of World\n          </button>\n          <button\n            className=\"ui button\"\n            onClick={() => this.setPlace(\"placeDefault\")}\n          >\n            Reset\n          </button>\n        </div>\n        <BrowserRouter>\n          <div style={{ marginLeft: \"10px\" }}>\n            <p style={{ display: \"inline-block\" }}>Sort by date:</p>\n            <Link to=\"/ascending\" style={{ padding: \"5px\" }}>\n              Ascending\n            </Link>\n            <Link to=\"/descending\" style={{ padding: \"5px\" }}>\n              Descending\n            </Link>\n          </div>\n          <Route\n            exact\n            path=\"/\"\n            render={props => (\n              <EventsList eventPlace={this.state.eventPlace} />\n            )}\n          />\n          <Route\n            exact\n            path=\"/ascending\"\n            render={props => (\n              <EventsList\n                eventPlace={this.state.eventPlace}\n                sort={sortVars.ascending}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/descending\"\n            render={props => (\n              <EventsList\n                eventPlace={this.state.eventPlace}\n                sort={sortVars.descending}\n              />\n            )}\n          />\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport eventsReducer from './eventsReducer';\n\nexport default combineReducers({\n    events: eventsReducer\n});","export default (state = [], action) => {\n    switch (action.type) {\n        case 'FETCH_EVENTS':\n            return action.payload;\n        default:\n            return state;\n    }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.querySelector('#root')\n);"],"sourceRoot":""}